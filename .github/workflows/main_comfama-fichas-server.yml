# # Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# # More GitHub Actions for Azure: https://github.com/Azure/actions
# name: Build and deploy Node.js project to Azure Function App - comfama-fichas-server
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
# env:
#   AZURE_FUNCTIONAPP_PACKAGE_PATH: '.output/deploy.zip' # set this to the path to your web app project, defaults to the repository root
#   NODE_VERSION: '20' # set this to the node version to use (supports 8.x, 10.x, 12.x)
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read #This is required for actions/checkout
#     steps:
#       - name: 'Checkout GitHub Action'
#         uses: actions/checkout@v4

#       - name: Setup Node ${{ env.NODE_VERSION }} Environment
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ env.NODE_VERSION }}

#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - uses: actions/cache@v2
#         id: yarn-cache
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-azure

#       - name: Install Dependencies
#         if: steps.cache.outputs.cache-hit != 'true'
#         run: yarn

#       - name: 'Resolve Project Dependencies Using Npm'
#         shell: bash
#         run: npm run build
#         env:
#           NITRO_PRESET: azure_functions

#       - name: Zip artifact for deployment
#         run: zip release.zip ./* -r
        
#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v4
#         with:
#           name: node-app
#           path: release.zip

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: node-app
#       - name: Unzip artifact for deployment
#         run: unzip release.zip
#       - name: 'Run Azure Functions Action'
#         uses: Azure/functions-action@v1
#         id: fa
#         with:
#           app-name: 'comfama-fichas-server'
#           slot-name: 'Production'
#           # package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
#           package: 'release.zip'
#           publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
#           sku: 'flexconsumption'
name: azure
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20.x]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@master

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-azure

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        run: npm run build
        env:
          NITRO_PRESET: azure_functions

      - name: "Deploy to Azure Functions"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
          package: .output/deploy.zip
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
